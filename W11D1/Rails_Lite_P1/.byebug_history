quit
current
@now
key
c
quit
c
s
req.cookies
c
req.cookies
c
quit
n
s
disp match_data.names
n
c
n
c
match_data.names
disp match_data
c
n
exit
n
quitn
quit
n
exit
n
regex
req
match(req)
route
n
disp route.class
exit
match_data
n
c
n
regex
n
route
n
c
exit
action_name
c
v
exit
@action_name
@controller_class
@http_method
@pattern
c
req.request_method
c
exit
http_method
pattern
quit
exit
n
c
disp @cookie
c
n
@cookie
n
req
disp @res
exit
c
exit
req.cookies
@cookie
exit
@cookie
@req.cookies
c
@req.cookies
disp @req
c
exit
JSON.parse(@cookie)
Json.parse(@cookie)
@cookie.parse_json
@cookie.json_parse
@cookie.parse
@cookie.to_o
@cookie.to_s
@cookie
@cookie.to_json
@req.cookies
@cookie.json
@cookie
quit
exit
c
exit
template.result(binding)
c
exit
data
exit
data
filename
template.result(binding)
template.result
template.result(binding)
template
exit
data
template
c
exit
template_name.to_s
template_name
temp
self.class.to_s
self.to_s
self.class
self
exit
next
c
exit
temp
exit
template_name
n
template
c
res.methods - Object.methods
c
[:update_param, :delete_param, :params, :logger, :user_agent, :multithread?, :referer, :referrer, :session, :session_options, :get?, :head?, :options?, :link?, :patch?, :post?, :put?, :trace?, :unlink?, :cookies, :xhr?, :host_with_port, :content_length, :ssl?, :ip, :fullpath, :[], :path, :media_type, :media_type_params, :content_charset, :form_data?, :parseable_data?, :base_url, :accept_encoding, :accept_language, :port, :trusted_proxy?, :host, :[]=, :path_info, :content_type, :values_at, :script_name, :delete?, :url, :authority, :GET, :POST, :body, :scheme, :script_name=, :path_info=, :request_method, :query_string, :env, :add_header, :set_header, :de
c
